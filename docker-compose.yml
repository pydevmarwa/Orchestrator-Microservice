services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    restart: unless-stopped
    depends_on:
      - kafka
      - zookeeper

  redisinsight:
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    restart: unless-stopped
    depends_on:
      - redis

  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    env_file:
      - .env
    volumes:
      - ./tools:/app/tools:ro
      - ./logs:/app/logs
      - ./orchestrator:/app/orchestrator
    restart: unless-stopped
    depends_on:
      - kafka
      - redis
    ports:
      - "8000:8000"

  ingestion:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - WORKER_TYPE=ingestion
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - kafka
      - redis

  standardization:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - WORKER_TYPE=standardization
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - kafka
      - redis

  application:
    build:
      context: .
      dockerfile: Dockerfile.worker
    env_file:
      - .env
    environment:
      - WORKER_TYPE=application
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - kafka
      - redis
